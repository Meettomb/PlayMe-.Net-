@page
@using Main_Project.Models;
@model Main_Project.Pages.HomeModel
@{
    Layout = "_Header";
    ViewData["Title"] = "Home";

    var randomMovies = Model.MoviesTable.OrderBy(x => Guid.NewGuid()).Take(5).ToList();

    var randomMovies2 = Model.MoviesTable.OrderBy(x => Guid.NewGuid()).ToList();
}

<head>
</head>

@if (TempData["Message"] != null)
{
    <div class="alert popup_message" id="tempMessage">
        <span class="mdi mdi-check-circle"></span> @TempData["Message"]
    </div>


}
@if (TempData["ErrorMessage"] != null)



{
    <div class="alert alert-danger popup_message" id="tempMessage">
        <span class="mdi mdi-check-circle"></span> @TempData["ErrorMessage"]
    </div>
}

<div class="slider-container">
    <button class="prev" onclick="plusSlides(-1)">&#10094;</button>
    <div class="slider-wrapper">

        @foreach (var item in randomMovies)

        {
            <div class="slide data">

                <a href="/Single_movie?movieId=@item.Movieid" class="openPopup" data-movie-id="@item.Movieid">
                    <img class="big_poster" src="/poster/@item.Movieposter2" alt="Movie Poster" loading="lazy">
                </a>
            </div>

        }
    </div>
    <button class="next" onclick="plusSlides(1)">&#10095;</button>
</div>


@if (Model.WatchHistories != null && Model.WatchHistories.Count() > 0)
{
    <h3 class="wtachhidtory">Your Watch History</h3>
    <div class="main3">
        <div class="section3">
            <div class="slider" id="slider2">
                <div class="slider-wrapper">
                    @foreach (var history in Model.WatchHistories)
                    {
                        var movie = Model.MoviesTable?.FirstOrDefault(m => m.Movieid == history.movieid);
                        if (movie != null)
                        {
                            <div class="movie_poster1 data">
                                <input type="hidden" name="movietype" value="@movie.Movietype" />
                                <input type="hidden" name="movieid" value="@movie.Movieid" />
                                <a href="/Single_movie_player?Movieid=@movie.Movieid&watchtime=@history.watchtime" class="openPopup close" data-movieid="@movie.Movieid">
                                    <img src="/poster/@movie.Movieposter2" alt="@movie.Moviename" loading="lazy">
                                    <span style="display: none;">@movie.Moviename</span>
                                    <progress value="@history.watchtime" max="@history.toteltime"></progress>


                                    <form method="post" asp-page-handler="RemoveFromList">
                                        <input type="hidden" name="movieid" value="@history.movieid" /> <!-- Ensure is valid -->
                                        <button type="submit" id="remove_movie" class="mdi mdi-close"></button>
                                    </form>
                                </a>


                            </div>
                        }
                    }

                </div>
                <button class="slider-button prev wh_pb">&#10094;</button>
                <button class="slider-button next wh_nb">&#10095;</button>
            </div>
        </div>
    </div>
}
else
{
}


@if (Model.SuggestedMovies.Count() >= 1)
{

    <h3 class="suggestionh2">We Think You'll Love These</h3>
    <div class="main1">
        <div class="section2">
            <div class="slider" id="slider1">
                <div class="slider-wrapper">
                    @foreach (var suggestion in Model.SuggestedMovies)
                    {
                        <div class="movie_poster1 data"
                             onmouseenter="playTrailer(this)"
                             onmouseleave="stopTrailer(this)">
                            <form method="post" action="/Home?handler=SaveMovieType" id="form-@suggestion.Movieid">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="movietype" value="@suggestion.Movietype" />
                                <input type="hidden" name="movieid" value="@suggestion.Movieid" />
                                <a href="#" class="openPopup" onclick="document.getElementById('form-@suggestion.Movieid').submit(); return false;">
                                    <img src="/poster/@suggestion.Movieposter2" alt="@suggestion.Moviename" loading="lazy">
                                    <span style="display: none;">@suggestion.Moviename</span>


                                </a>
                            </form>
                        </div>
                    }

                </div>
                <button class="slider-button prev">&#10094;</button>
                <button class="slider-button next">&#10095;</button>
            </div>
        </div>
    </div>
}

@if (Model.Topwatchmovies.Count() >= 1)
{
    <h3 class="suggestionh2">Top 10 Most Watched Movies</h3>
    <div class="main1">
        <div class="section2">
            <div class="slider" id="slider2">
                <div class="slider-wrapper">
                    @foreach (var movie in Model.Topwatchmovies)
                    {
                        <div class="movie_poster1 data"
                             onmouseenter="playTrailer(this)"
                             onmouseleave="stopTrailer(this)">
                            <form method="post" action="/Home?handler=SaveMovieType" id="form-@movie.Movieid">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="movietype" value="@movie.Movietype" />
                                <input type="hidden" name="movieid" value="@movie.Movieid" />
                                <a href="#" class="openPopup" onclick="document.getElementById('form-@movie.Movieid').submit(); return false;">
                                    <img src="/poster/@movie.Movieposter2" alt="@movie.Moviename" loading="lazy">
                                    <span style="display: none;">@movie.Moviename</span>
                                </a>
                            </form>
                        </div>
                    }
                </div>
                <button class="slider-button prev">&#10094;</button>
                <button class="slider-button next">&#10095;</button>
            </div>
        </div>
    </div>
}


@if (ViewData["MovieTypeGroups"] != null)
{
    var movieTypeGroups = (Dictionary<string, List<MoviesTable>>)ViewData["MovieTypeGroups"];

    foreach (var movieTypeGroup in movieTypeGroups)
    {
        var movieType = movieTypeGroup.Key;
        var movies = movieTypeGroup.Value;

        <h3 class="suggestionh2">
            <a href="/Movies/Movie_Category?category=@movieType">@movieType <span>Explore All >></span></a>
        </h3>
        <div class="main1">
            <div class="section2">
                <div class="slider" id="slider3-@movieType.Replace(" ", "")">
                    <div class="slider-wrapper">
                        @foreach (var movie in movies)
                        {
                            <div class="movie_poster1" onmouseenter="playTrailer(this)" onmouseleave="stopTrailer(this)">
                                <form method="post" action="/Home?handler=SaveMovieType" id="form-@movie.Movieid">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="movietype" value="@movie.Movietype" />
                                    <input type="hidden" name="movieid" value="@movie.Movieid" />
                                    <a href="#" class="openPopup" onclick="document.getElementById('form-@movie.Movieid').submit(); return false;">
                                        <img src="/poster/@movie.Movieposter2" alt="@movie.Moviename" loading="lazy" />
                                        <span style="display: none;">@movie.Moviename</span>


                                    </a>
                                </form>
                            </div>
                        }
                    </div>
                    <button class="slider-button prev">&#10094;</button>
                    <button class="slider-button next">&#10095;</button>
                </div>
            </div>
        </div>
    }
}


<main class="main2">
    <section>
        <div class="card_div">
            @foreach (var item in randomMovies2)
            {
                <div class="movie_poster data">
                    <form method="post" action="/Home?handler=SaveMovieType" id="form-@item.Movieid">
                        @Html.AntiForgeryToken() <!-- Include anti-forgery token -->
                        <input type="hidden" name="movietype" value="@item.Movietype" /> <!-- This is what you're storing -->
                        <input type="hidden" name="movieid" value="@item.Movieid" /> <!-- This is for redirection -->
                        <a href="#" class="openPopup" onclick="document.getElementById('form-@item.Movieid').submit(); return false;">
                            <img src="/poster/@item.Movieposter" alt="@item.Moviename" loading="lazy">
                            <span>@item.Moviename</span>
                        </a>
                    </form>
                </div>
            }
        </div>
    </section>
</main>



@* Store Data in localStorage Using JavaScript *@

<script>
    // Retrieve the session data from Razor ViewData
    const id = "@ViewData["Id"]";
    const username = "@ViewData["Username"]";
    const profilepic = "@ViewData["ProfilePic"]";
    const email = "@ViewData["Email"]";
    const dob = "@ViewData["DOB"]";
    const gender = "@ViewData["Gender"]";
    const userRole = "@ViewData["UserRole"]";
    const subscriptionActive = "@ViewData["SubscriptionActive"]";

    // Store the data in localStorage
    if (id) localStorage.setItem("Id", id);
    if (username) localStorage.setItem("Username", username);
    if (profilepic) localStorage.setItem("ProfilePic", profilepic);
    if (email) localStorage.setItem("Email", email);
    if (dob) localStorage.setItem("DOB", dob);
    if (gender) localStorage.setItem("Gender", gender);
    if (userRole) localStorage.setItem("UserRole", userRole);
    if (subscriptionActive) localStorage.setItem("SubscriptionActive", subscriptionActive);

    // Retrieve data from localStorage
    const username = localStorage.getItem("Username");
    const profilePic = localStorage.getItem("ProfilePic");
    const email = localStorage.getItem("Email");
    // And so on for other items

</script>




<!-- wtach history script -->

<script>
    document.addEventListener('DOMContentLoaded', function () {
        function initializeSlider(slider) {
            const sliderId = slider.id;
            @* console.log(`Initializing slider with ID: ${sliderId}`); *@

            const prevButton = slider.querySelector('.slider-button.prev');
            const nextButton = slider.querySelector('.slider-button.next');
            const sliderWrapper = slider.querySelector('.slider-wrapper');

            if (!prevButton || !nextButton || !sliderWrapper) {
                console.error(`Required elements not found in slider with ID ${sliderId}`);
                return;
            }

            let currentIndex = 0;
            const posterWidth = slider.querySelector('.movie_poster1').offsetWidth;
            const totalMovies = slider.querySelectorAll('.movie_poster1').length;
            const moviesToShow = Math.floor(sliderWrapper.parentElement.offsetWidth / (posterWidth + 20)); // 20 is the margin on each side

            @* console.log(`Total movies: ${totalMovies}, Movies to show: ${moviesToShow}`); *@

            function updateSlider() {
                const offset = -currentIndex * (posterWidth + 20); // 20 is the margin on each side
                sliderWrapper.style.transform = `translateX(${offset}px)`;
                updateButtonVisibility(); // Update button visibility on each slide
            }

            function updateButtonVisibility() {
                prevButton.style.display = currentIndex > 0 ? 'block' : 'none';
                nextButton.style.display = currentIndex < totalMovies - moviesToShow ? 'block' : 'none';
            }

            prevButton.addEventListener('click', function () {
                @* console.log(`Prev button clicked on slider ${sliderId}`); *@
                if (currentIndex > 0) {
                    currentIndex--;
                } else {
                    currentIndex = totalMovies - moviesToShow; // Go to the last position if at the start
                }
                updateSlider();
            });

            nextButton.addEventListener('click', function () {
                @* console.log(`Next button clicked on slider ${sliderId}`); *@
                if (currentIndex < totalMovies - moviesToShow) {
                    currentIndex++;
                } else {
                    currentIndex = 0; // Reset to the start when reaching the end
                }
                updateSlider();
            });

            // Touch support
            let touchStartX = 0;
            let touchEndX = 0;

            sliderWrapper.addEventListener('touchstart', function (e) {
                touchStartX = e.touches[0].clientX;
            });

            sliderWrapper.addEventListener('touchmove', function (e) {
                touchEndX = e.touches[0].clientX;
            });

            sliderWrapper.addEventListener('touchend', function () {
                if (touchEndX < touchStartX - 50) {
                    @* console.log('Swiped left'); *@
                    if (currentIndex < totalMovies - moviesToShow) {
                        currentIndex++;
                    } else {
                        currentIndex = 0; // Reset to the start when reaching the end
                    }
                    updateSlider();
                }

                if (touchEndX > touchStartX + 50) {
                    @* console.log('Swiped right'); *@
                    if (currentIndex > 0) {
                        currentIndex--;
                    } else {
                        currentIndex = totalMovies - moviesToShow; // Go to the last position if at the start
                    }
                    updateSlider();
                }
            });

            // Initial update
            updateSlider();
        }

        // Dynamically initialize all sliders on the page
        const sliders = document.querySelectorAll('.slider');
        sliders.forEach(slider => initializeSlider(slider));
    });

</script>


<!--Slider script-->
<script>
    let slideIndex = 0;
    let slideInterval;

    function showSlides(index) {
        const slides = document.querySelectorAll('.slide');
        if (index >= slides.length) { slideIndex = 0; }
        if (index < 0) { slideIndex = slides.length - 1; }

        const offset = -slideIndex * 100;
        const wrapper = document.querySelector('.slider-wrapper');
        wrapper.style.transform = `translateX(${offset}vw)`;
    }

    function plusSlides(n) {
        slideIndex += n;
        showSlides(slideIndex);
        resetSlideInterval(); // Reset the interval on user interaction
    }

    function startSlideInterval() {
        slideInterval = setInterval(() => {
            plusSlides(1);
        }, 3000); // Change slides every 3 seconds
    }

    function resetSlideInterval() {
        clearInterval(slideInterval);
        startSlideInterval(); // Restart the interval
    }

    // Initialize the slider
    document.addEventListener('DOMContentLoaded', () => {
        showSlides(slideIndex);
        startSlideInterval(); // Start the automatic sliding
    });
</script>


<!--Lode more movies whane scrolling-->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let currentPage = 1;
        const movieContainer = document.getElementById("movieContainer");

        // Function to load more movies when the user scrolls down
        function loadMoreMovies() {
            const totalHeight = document.documentElement.scrollHeight;
            const currentScroll = window.innerHeight + window.scrollY;

            // Check if user has scrolled to near the bottom (e.g., 200px from the bottom)
            if (currentScroll >= totalHeight - 200) {
                currentPage++;

                // Fetch the next batch of movies using AJAX
                fetch(`/LoadMoreMovies?page=${currentPage}`)
                    .then(response => response.text())
                    .then(html => {
                        // Append new movies to the container
                        movieContainer.innerHTML += html;
                    });
            }
        }

        // Listen to scroll event
        window.addEventListener('scroll', loadMoreMovies);
    });
</script>


<!--Message show and hide-->
<script>
    // Use JavaScript to hide the message after 3 seconds
    setTimeout(function () {
        var messageDiv = document.getElementById("tempMessage");
        if (messageDiv) {
            messageDiv.style.display = 'none'; // Hide the message
        }
    }, 4000); // 2000 milliseconds = 2 seconds

    setTimeout(function () {
        var messageDiv = document.getElementById("message");
        if (messageDiv) {
            messageDiv.style.display = 'none'; // Hide the message
        }
    }, 4000); // 2000 milliseconds = 2 seconds
</script>

<script>

      document.addEventListener('DOMContentLoaded', () => {
        const images = document.querySelectorAll('.movie_poster1 img');

        images.forEach(img => {
            // Add the loading animation class initially
            img.classList.add('loading-animation');

            // Remove the animation class once the image has loaded
            img.addEventListener('load', () => {
                img.classList.remove('loading-animation');
            });

            // Handle images that may have loaded from cache
            if (img.complete) {
                img.classList.remove('loading-animation');
            }
        });
    });

</script>


